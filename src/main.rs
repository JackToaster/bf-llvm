use std::error::Error;

mod parser;
mod compiler;


fn main() -> Result<(), Box<dyn Error>> {
    let program = r#"

    --->--->>>>->->->>>>>-->>>>>>>>>>>>>>>>>>+>>++++++++++[
        <<++[
          --<+<<+<<+>>>>[
            >[<->>+++>>[-]<<<+[<++>>+>>-<<<--]]+>+++++[>>++++++++++<<-]
            >>-.[-]>>+[<<<<+>>+>>-]<<<<<<[>+<-]<<
          ]++++++++++.[-]>++
        ]-->>[-->[-]>]<<[
          >>--[
            -[
              -[
                -[
                  -[
                    -[
                      --[<+++++++>>+<+]<-.----->,[<->-]
                      -->[[-<<]>>>>]+<[<[-]>>-]>[,[-]<]
                    ]<[
                      +[[<<]-[>>]<+<-]>[-<+]<<[<<]-<[>[+>>]>[>]+>[-]]
                      <-[[+>>]<-->>[>]++++>>+>]
                    ]>
                  ]<[
                    >-[+<+++]+<+++[+[---->]<<<<<<[>]>[<<[-]>>[>]>]]
                    >[<+[---->]+[<]<[[>>]+>++++++++>+>]>>[[>]>>>]<<]
                    <<+>++>
                  ]>
                ]<[
                  -[[>+>+<<-]>[<+>-]+++>>+++++>>]
                  <[<<++[-->>[-]++>]>[[-]+>[<<+>>-]>]<]
                ]>
              ]<[
                -[
                  --[+<<<<--[+>[-]>[<<+>+>-]<<[>>+<<-]]++[>]]
                  <<[>>+>+<<<-]>>>[<<<+>>>-]>
                ]<[<<<[-]+++>[-]>[<+>>>+<<-]+>>>]+>
              ]>
            ]<[
              +[[<]<<[<<]-<->>+>[>>]>[>]<-]<[<]<<+<++[[>+<-]++<[<<->>+]<++]<
              <<<<<<      +> > >+> > >+[
              <<<               ->+>+>+[
              <<<<<<<   +>->+> > >->->+[
              <<<<<         ->+>+> >+>+[
              <<<<            ->->+>->+[
              <<<<<<<<+>-> >+> > >->+>+[
              <<<<<         -> >+> >->+[
              <<<<            +>->+> >+]]]]]]]
              +++[[>+<-]<+++]--->>[[<->-]<+++>>]++[[<->-]>>]>[>]
            ]<
          ]
        ]<
      ]
    "#;
    println!("Parsing input...");
    let (_remainder, parsed) = parser::parse::parse_bf(program)?;

    println!("Compiling & executing compiled brainfuck code:");
    println!("==============================================");
    let compiled = compiler::jit::compile(parsed)?;


    Ok(())
}
